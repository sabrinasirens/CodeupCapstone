output:
- ec2_public_ip:
  - value: aws_instance.web1.public_ip
- db_instance_address:
  - value: aws_db_instance.project_db.address
- lb_dns_name:
  - description: The DNS name of the load balancer
    value: ${aws_lb.project_alb.dns_name}
provider:
- aws:
  - region: us-east-1
resource:
- aws_vpc:
  - vpc:
    - cidr_block: 10.0.0.0/16
      instance_tenancy: default
      tags:
      - Name: vpc-project
- aws_internet_gateway:
  - ig:
    - tags:
      - Name: ig-project
      vpc_id: aws_vpc.vpc.id
- aws_subnet:
  - public_1:
    - availability_zone: us-east-1a
      cidr_block: 10.0.1.0/24
      map_public_ip_on_launch: true
      tags:
      - Name: public-1
      vpc_id: aws_vpc.vpc.id
- aws_subnet:
  - public_2:
    - availability_zone: us-east-1b
      cidr_block: 10.0.2.0/24
      map_public_ip_on_launch: true
      tags:
      - Name: public-2
      vpc_id: aws_vpc.vpc.id
- aws_subnet:
  - private_1:
    - availability_zone: us-east-1a
      cidr_block: 10.0.3.0/24
      map_public_ip_on_launch: false
      tags:
      - Name: private-1
      vpc_id: aws_vpc.vpc.id
- aws_subnet:
  - private_2:
    - availability_zone: us-east-1b
      cidr_block: 10.0.4.0/24
      map_public_ip_on_launch: false
      tags:
      - Name: private-2
      vpc_id: aws_vpc.vpc.id
- aws_route_table:
  - project_rt:
    - route:
      - cidr_block: 0.0.0.0/0
        gateway_id: aws_internet_gateway.ig.id
      tags:
      - Name: project-rt
      vpc_id: aws_vpc.vpc.id
- aws_route_table_association:
  - public_route_1:
    - route_table_id: aws_route_table.project_rt.id
      subnet_id: aws_subnet.public_1.id
- aws_route_table_association:
  - public_route_2:
    - route_table_id: aws_route_table.project_rt.id
      subnet_id: aws_subnet.public_2.id
- aws_security_group:
  - public_sg:
    - description: Allow web and ssh traffic
      egress:
      - cidr_blocks:
        - 0.0.0.0/0
        from_port: 0
        protocol: "-1"
        to_port: 0
      ingress:
      - cidr_blocks:
        - 0.0.0.0/0
        from_port: 80
        protocol: tcp
        to_port: 80
      - cidr_blocks:
        - 0.0.0.0/0
        from_port: 22
        protocol: tcp
        to_port: 22
      name: public-sg
      vpc_id: aws_vpc.vpc.id
- aws_security_group:
  - private_sg:
    - description: Allow web tier and ssh traffic
      egress:
      - cidr_blocks:
        - 0.0.0.0/0
        from_port: 0
        protocol: "-1"
        to_port: 0
      ingress:
      - cidr_blocks:
        - 10.0.0.0/16
        from_port: 3306
        protocol: tcp
        security_groups:
        - aws_security_group.public_sg.id
        to_port: 3306
      - cidr_blocks:
        - 0.0.0.0/0
        from_port: 22
        protocol: tcp
        to_port: 22
      name: private-sg
      vpc_id: aws_vpc.vpc.id
- aws_security_group:
  - alb_sg:
    - description: security group for alb
      egress:
      - cidr_blocks:
        - 0.0.0.0/0
        from_port: "0"
        protocol: "-1"
        to_port: "0"
      ingress:
      - cidr_blocks:
        - 0.0.0.0/0
        from_port: "0"
        protocol: "-1"
        to_port: "0"
      name: alb-sg
      vpc_id: aws_vpc.vpc.id
- aws_lb:
  - project_alb:
    - internal: false
      load_balancer_type: application
      name: alb
      security_groups:
      - aws_security_group.alb_sg.id
      subnets:
      - aws_subnet.public_1.id
      - aws_subnet.public_2.id
- aws_lb_target_group:
  - project_tg:
    - depends_on:
      - aws_vpc.vpc
      name: project-tg
      port: 80
      protocol: HTTP
      vpc_id: aws_vpc.vpc.id
- aws_lb_target_group_attachment:
  - tg_attach1:
    - depends_on:
      - aws_instance.web1
      port: 80
      target_group_arn: aws_lb_target_group.project_tg.arn
      target_id: aws_instance.web1.id
- aws_lb_target_group_attachment:
  - tg_attach2:
    - depends_on:
      - aws_instance.web2
      port: 80
      target_group_arn: aws_lb_target_group.project_tg.arn
      target_id: aws_instance.web2.id
- aws_lb_listener:
  - listener_lb:
    - default_action:
      - target_group_arn: aws_lb_target_group.project_tg.arn
        type: forward
      load_balancer_arn: aws_lb.project_alb.arn
      port: "80"
      protocol: HTTP
- aws_instance:
  - web1:
    - ami: ami-0cff7528ff583bf9a
      associate_public_ip_address: true
      availability_zone: us-east-1a
      instance_type: t2.micro
      key_name: thisoneworks
      subnet_id: aws_subnet.public_1.id
      tags:
      - Name: web1_instance
      user_data: |
        #!/bin/bash
        yum update -y
        yum install httpd -y
        systemctl start httpd
        systemctl enable httpd
        echo "<html><body><h1>Hi there</h1></body></html>" > /var/www/html/index.html
      vpc_security_group_ids:
      - aws_security_group.public_sg.id
- aws_instance:
  - web2:
    - ami: ami-0cff7528ff583bf9a
      associate_public_ip_address: true
      availability_zone: us-east-1b
      instance_type: t2.micro
      key_name: thisoneworks
      subnet_id: aws_subnet.public_2.id
      tags:
      - Name: web2_instance
      user_data: |
        #!/bin/bash
        yum update -y
        yum install httpd -y
        systemctl start httpd
        systemctl enable httpd
        echo "<html><body><h1>Hi there again</h1></body></html>" > /var/www/html/index.html
      vpc_security_group_ids:
      - aws_security_group.public_sg.id
- aws_db_subnet_group:
  - db_subnet:
    - name: db-subnet
      subnet_ids:
      - aws_subnet.private_1.id
      - aws_subnet.private_2.id
- aws_db_instance:
  - project_db:
    - allocated_storage: 5
      db_name: project_db
      db_subnet_group_name: aws_db_subnet_group.db_subnet.id
      engine: mysql
      engine_version: "5.7"
      identifier: db-instance
      instance_class: db.t3.micro
      password: password
      publicly_accessible: false
      skip_final_snapshot: true
      username: admin
      vpc_security_group_ids:
      - aws_security_group.private_sg.id
terraform:
- required_providers:
  - aws:
    - source: hashicorp/aws
      version: ~> 4.16
